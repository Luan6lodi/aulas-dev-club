/*üîπ Tipos de Dados em JavaScript

Em JS, os tipos de dados se dividem em primitivos e de refer√™ncia.

1. Primitivos

S√£o imut√°veis (n√£o mudam depois de criados).

String ‚Üí textos. Ex: "Ol√°"

Number ‚Üí n√∫meros (inteiros e decimais). Ex: 10, 3.14

Boolean ‚Üí verdadeiro/falso. Ex: true, false

Null ‚Üí valor nulo intencional. Ex: let x = null

Undefined ‚Üí valor n√£o definido. Ex: let y;

BigInt ‚Üí n√∫meros inteiros muito grandes. Ex: 12345678901234567890n

Symbol ‚Üí valores √∫nicos, usados em casos avan√ßados. Ex: Symbol("id")

2. De Refer√™ncia

S√£o mut√°veis e armazenados por refer√™ncia.

Object ‚Üí cole√ß√µes de dados. Ex: { nome: "Luan", idade: 19 }

Array ‚Üí lista ordenada. Ex: [1, 2, 3]

Function ‚Üí fun√ß√µes tamb√©m s√£o objetos. Ex: function ola() {}

üîπ Strings em JavaScript

String √© um texto entre aspas simples '...', duplas "..." ou crases `...`.

Exemplos:
let nome = "Luan";
let saudacao = 'Ol√°, mundo!';
let template = `Meu nome √© ${nome}`; // template literal (pode usar vari√°veis)

Principais m√©todos de String:

| M√©todo                      | Exemplo                           | Retorno                 |
| --------------------------- | --------------------------------- | ----------------------- |
| `.length`                   | `"Luan".length`                   | `4` (tamanho da string) |
| `.toUpperCase()`            | `"luan".toUpperCase()`            | `"LUAN"`                |
| `.toLowerCase()`            | `"LUAN".toLowerCase()`            | `"luan"`                |
| `.includes("a")`            | `"Luan".includes("a")`            | `true`                  |
| `.indexOf("a")`             | `"Luan".indexOf("a")`             | `2` (posi√ß√£o do "a")    |
| `.slice(0, 2)`              | `"Luan".slice(0, 2)`              | `"Lu"`                  |
| `.replace("Luan", "Mello")` | `"Luan".replace("Luan", "Mello")` | `"Mello"`               |


‚ö° Resumo r√°pido:

Tipos de dados b√°sicos: String, Number, Boolean, Null, Undefined, BigInt, Symbol.

String = texto, pode ser manipulado com v√°rios m√©todos.

Para textos din√¢micos, use template literals com crase: `Ol√° ${nome}`.

*/

const texto1 = "Textos com aspas 'duplas'";
const texto2 = 'Textos com aspas "simples"';
const texto3 = `Textos com crase`; /*me permite pular linhas */

console.log(texto1);
console.log(texto2);
console.log(texto3);
