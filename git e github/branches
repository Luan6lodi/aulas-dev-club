O que √© uma Branch no Git?

Uma branch (ramifica√ß√£o) √© como uma linha do tempo paralela dentro do seu projeto.

No branch principal (geralmente chamado main ou master), voc√™ tem a vers√£o est√°vel do c√≥digo.

Quando voc√™ cria uma nova branch, est√° criando uma c√≥pia dessa linha do tempo para trabalhar separado, sem mexer no que j√° est√° pronto.

üëâ Pense em uma √°rvore:

O tronco √© o main.

Cada galho (branch) √© uma nova ideia ou funcionalidade sendo desenvolvida.

Por que usar branches?

Trabalhar em novas funcionalidades sem bagun√ßar o c√≥digo principal.

Testar ideias sem comprometer a vers√£o est√°vel.

Colabora√ß√£o: cada dev pode criar sua branch e depois juntar (merge) ao main.

| Comando                          | Fun√ß√£o                                        |
| -------------------------------- | --------------------------------------------- |
| `git branch`                     | Lista todas as branches do reposit√≥rio        |
| `git branch nome-da-branch`      | Cria uma nova branch                          |
| `git checkout nome-da-branch`    | Vai para a branch escolhida                   |
| `git switch nome-da-branch`      | (mesma coisa que checkout, mas mais moderno)  |
| `git checkout -b nome-da-branch` | Cria e j√° muda para a branch                  |
| `git merge nome-da-branch`       | Junta as altera√ß√µes de uma branch com a atual |
| `git branch -d nome-da-branch`   | Deleta uma branch (se j√° foi mesclada)        |


# Voc√™ est√° no main
git checkout -b nova-funcionalidade
# agora trabalha nessa branch separada

# depois de terminar
git checkout main
git merge nova-funcionalidade


